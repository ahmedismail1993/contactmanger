{"version":3,"sources":["componets/Header.js","context.js","componets/contact.js","componets/contacts.js","componets/pages/About.js","componets/pages/NotFound.js","componets/AddContact.js","componets/EditContact.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","branding","NavLink","to","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","toConsumableArray","concat","map","Provider","dispatch","_this","setState","_this2","this","axios","get","then","res","data","value","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this$props$contact","name","phone","email","onClick","style","cursor","float","color","bind","Link","marginRight","textDecoration","Contacts","componets_contact","key","About","NotFound","AddContact","erros","handleSubmit","e","preventDefault","_this$state","post","history","push","handleChange","inputValue","target","defineProperty","_this$state2","onSubmit","htmlFor","placeholder","autoComplete","onChange","EditContact","match","params","updateContact","put","_this3","App","context_Provider","HashRouter","Fragment","componets_Header","Switch","Route","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ca940da9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            {props.branding}\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/\">\r\n                  <i className=\"fas fa-home\" /> Home\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/about\">\r\n                  <i className=\"fas fa-question\" /> About\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/contact/add\">\r\n                  <i className=\"fas fa-plus\" /> Add Contact\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","// this is the new way to create sate tp make it public to every component\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\n// creat Reducer\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(res => this.setState({ contacts: res.data }));\r\n  }\r\n\r\n  // value = all the states  ممكن اخصص ستات معينه بس انا عايزها بتساوي كل السنات\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  };\r\n\r\n  render() {\r\n    const { showContactInfo } = this.state;\r\n    const { id, name, phone, email } = this.props.contact; // diststrcuring method\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link\r\n                  to={`/contact/edit/${id}`}\r\n                  className=\"fas fa-edit\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"orange\",\r\n                    marginRight: \"10px\",\r\n                    textDecoration: \"none\"\r\n                  }}\r\n                />\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./contact\";\r\nimport { Consumer } from \"../context\";\r\n\r\nclass Contacts extends Component {\r\n  // هستخدم طريقة تانيه غير دي وهي actions\r\n  // deleteContact = id => {\r\n  //   const { contacts } = this.state; // distructring\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id); // بقولو رجعلي كله ماعدا الاي داي المتشابه\r\n  //   this.setState({ contacts: newContacts });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div>\r\n              <h1 className=\"display-4 mb-3\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  // deleteClickHandler={this.deleteContact.bind(this, contact.id)} // using > this.bind(this,params)  بستخدمها لو عاوز اممر بارامتر\r\n                />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>this is about page</h1>\r\n      <p className=\"lead\">this is about page version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4 text-danger\">404 Page Not Found</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport axios from \"axios\";\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    erros: {}\r\n  };\r\n\r\n  handleSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, erros } = this.state;\r\n    // check for validation\r\n    if (name === \"\") {\r\n      this.setState({ erros: { name: \"Name field is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ erros: { email: \"Name field is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ erros: { phone: \"Name field is required\" } });\r\n      return;\r\n    }\r\n\r\n    // post request\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", {\r\n        name,\r\n        email,\r\n        phone\r\n      })\r\n      .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n    // make inputs empty after submit\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      erros: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  handleChange = e => {\r\n    const inputValue = e.target.value;\r\n    this.setState({ [e.target.name]: inputValue });\r\n  };\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">name</label>\r\n                    <input\r\n                      className=\"form-control from-control-lg\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      autoComplete=\"off\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <input\r\n                      className=\"form-control from-control-lg\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      autoComplete=\"off\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">phone</label>\r\n                    <input\r\n                      className=\"form-control from-control-lg\"\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter phone...\"\r\n                      autoComplete=\"off\"\r\n                      value={phone}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <input type=\"submit\" className=\"btn btn-dark btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(res => {\r\n      const contact = res.data;\r\n      this.setState({\r\n        name: contact.name,\r\n        email: contact.email,\r\n        phone: contact.phone\r\n      });\r\n    });\r\n  }\r\n\r\n  handleSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    // post request\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", {\r\n        name,\r\n        email,\r\n        phone\r\n      })\r\n      .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    //put request\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    axios\r\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n      .then(res => dispatch({ type: \"UPDATE_CONTACT\", payload: res.data }));\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\"\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  handleChange = e => {\r\n    const inputValue = e.target.value;\r\n    this.setState({ [e.target.name]: inputValue });\r\n  };\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">name</label>\r\n                    <input\r\n                      className=\"form-control from-control-lg\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      autoComplete=\"off\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <input\r\n                      className=\"form-control from-control-lg\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      autoComplete=\"off\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">phone</label>\r\n                    <input\r\n                      className=\"form-control from-control-lg\"\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter phone...\"\r\n                      autoComplete=\"off\"\r\n                      value={phone}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-dark btn-block\"\r\n                    value=\"Update Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport Header from \"./componets/Header\";\nimport Provider from \"./context\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./componets/contacts\";\nimport About from \"./componets/pages/About\";\nimport NotFound from \"./componets/pages/NotFound\";\nimport AddContact from \"./componets/AddContact\";\nimport EditContact from \"./componets/EditContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <HashRouter>\n          <React.Fragment>\n            <Header branding=\"Contact Manger\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}